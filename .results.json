{"stats": {"errors": 0, "failures": 1, "passes": 6, "skipped": 0, "encoding": "UTF-8", "total": 7}, "results": [{"classname": "index_test:TestDistance", "name": "test_avenue_distance", "time": 0.00017714500427246094, "type": "success"}, {"classname": "index_test:TestDistance", "name": "test_distance", "time": 6.842613220214844e-05, "type": "success"}, {"classname": "index_test:TestDistance", "name": "test_distance_all", "time": 0.00012946128845214844, "type": "success"}, {"classname": "index_test:TestDistance", "name": "test_distance_between_neighbors_squared", "time": 5.793571472167969e-05, "type": "success"}, {"classname": "index_test:TestDistance", "name": "test_distance_with_neighbor", "time": 7.176399230957031e-05, "type": "success"}, {"classname": "index_test:TestDistance", "name": "test_nearest_neighbors", "time": 0.00018596649169921875, "type": "failure", "errtype": "builtins.AssertionError", "message": "({'avenue': 5, 'distance': 1.0, 'name': '[90 chars]: 6}) != [{'avenue': 5, 'distance': 1.0, 'name': '[90 chars]: 6}]", "tb": "Traceback (most recent call last):\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 67, in testPartExecutor\n    yield\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 625, in run\n    testMethod()\n  File \"/home/NaokoSuga/calculating-distance-lab-data-science-intro-000/test/index_test.py\", line 32, in test_nearest_neighbors\n    {'avenue': 3, 'distance': 2.23606797749979, 'name': 'Steven', 'street': 6}])\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 836, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/opt/conda/lib/python3.6/site-packages/unittest2/case.py\", line 829, in _baseAssertEqual\n    raise self.failureException(msg)\nAssertionError: ({'avenue': 5, 'distance': 1.0, 'name': '[90 chars]: 6}) != [{'avenue': 5, 'distance': 1.0, 'name': '[90 chars]: 6}]\n"}, {"classname": "index_test:TestDistance", "name": "test_street_distance", "time": 7.224082946777344e-05, "type": "success"}]}